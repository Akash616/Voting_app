const express = require('express')
const router = express.Router(); //diff. end point ka manage karta hai.
const User = require('./../models/user'); //2 file picha hai
const {jwtAuthMiddleware, generateToken} = require('./../jwt');

router.post('/signup', async (req, res) => {
  
    try{
  
      const data = req.body; //assuming the request body contains the User data

      //Create a new User document using the Mongoose model
      const newUser = new User(data);

      //save the new user to the database
      const response = await newUser.save();
      console.log('data saved');

      //---------token--------------------------------
      const payload = {
        id: response.id
      }

      console.log(JSON.stringify(payload));
      const token = generateToken(payload);
      console.log("Token is : ", token);

      res.status(200).json({response: response, token: token});
  
    } catch(err) {
  
      console.log(err);
      res.status(500).json({ error: 'Internal Server Error'});
  
    }
  
  });

    //Login Route
    router.post('/login', async (req, res) => {
      try{
        //Extract aadharCardNumber and password from request body
        const {aadharCardNumber, password} = req.body;
  
        //Find the user by aadharCardNumber
        const user = await User.findOne({aadharCardNumber: aadharCardNumber});
  
        //If user does not exists or password does not match, return error
        if(!(await user.comparePassword(password))){
          return res.status(401).json({error: 'Invalid aadharCardNumber or password'});
        }
  
        //generate token
        const payload = {
          id: user.id
        }
  
        const token = generateToken(payload);
  
        res.json({token});
  
      }catch(err){
        console.log(err);
        res.status(500).json({error: 'Internal Server Error'});
      }
    });

  //Profile route
  router.get('/profile', jwtAuthMiddleware, async (req, res) => {
    try{

      //token ka anadar say data(id) nikala - use token
      const userData = req.user;
      
      const userId = userData.id;
      const user = await Person.findById(userId);

      res.status(200).json({user});

    }catch(err){

      console.log(err);
      res.status(500).json({ error: 'Internal Server Error'});

    }
  });

  router.put('/profile/password', jwtAuthMiddleware, async (req, res) => {
    try{

      const userId = req.user.id; //Extract the id from the token
     
      //Extract current and new passwords from request body
      const {currentPassword, newPassword} = req.body;

      //Find the user by userId
      const user = await User.findById(userId);

      //If password does not match , return error
      if(!user || !(await user.comparePassword(currentPassword))){
        return res.status(401).json({error: 'Invalid password'});
      }

      //Update the user's password
      user.password = newPassword;
      await user.save();

      console.log('password updated');
      res.status(200).json({message: "Password updated"});

    }catch(err){
      console.log(err);
      res.status(500).json({error: 'Internal Server Error'});
    }
  });

  module.exports = router;
  
  